strict digraph  {
	"INPUT_%10" [input=True];
	"INPUT_%12" [input=True];
	"INPUT_%14" [input=True];
	"INPUT_%16" [input=True];
	"op_%17" [op=SL];
	"1" [const=True];
	"op_%18" [op=LT];
	"0" [const=True];
	"op_%19" [op=XOR];
	"27" [const=True];
	"op_%20" [op=SEL];
	"merge_%20" [op=OR];
	"op_%21" [op=SL];
	"op_%22" [op=LT];
	"op_%23" [op=XOR];
	"op_%24" [op=SEL];
	"merge_%24" [op=OR];
	"op_%25" [op=XOR];
	"op_%26" [op=XOR];
	"op_%27" [op=XOR];
	"op_%28" [op=XOR];
	"OUTPUT_0" [output=True];
	"op_%29" [op=SL];
	"op_%30" [op=LT];
	"op_%31" [op=XOR];
	"op_%32" [op=SEL];
	"merge_%32" [op=OR];
	"op_%33" [op=XOR];
	"op_%34" [op=XOR];
	"op_%35" [op=XOR];
	"op_%36" [op=XOR];
	"OUTPUT_1" [output=True];
	"op_%38" [op=SL];
	"op_%39" [op=LT];
	"op_%40" [op=XOR];
	"op_%41" [op=SEL];
	"merge_%41" [op=OR];
	"op_%43" [op=SL];
	"op_%44" [op=LT];
	"op_%45" [op=XOR];
	"op_%46" [op=SEL];
	"merge_%46" [op=OR];
	"op_%47" [op=XOR];
	"op_%48" [op=XOR];
	"op_%49" [op=XOR];
	"op_%50" [op=XOR];
	"OUTPUT_2" [output=True];
	"op_%52" [op=SL];
	"op_%53" [op=LT];
	"op_%54" [op=XOR];
	"op_%55" [op=SEL];
	"merge_%55" [op=OR];
	"op_%56" [op=XOR];
	"op_%57" [op=XOR];
	"op_%58" [op=XOR];
	"OUTPUT_3" [output=True];
	"INPUT_%10" -> "op_%17"  [operand=left];
	"INPUT_%10" -> "op_%18"  [operand=left];
	"INPUT_%10" -> "op_%33"  [operand=right];
	"INPUT_%10" -> "op_%47"  [operand=right];
	"INPUT_%12" -> "op_%21"  [operand=left];
	"INPUT_%12" -> "op_%22"  [operand=left];
	"INPUT_%12" -> "op_%25"  [operand=right];
	"INPUT_%12" -> "op_%47"  [operand=left];
	"INPUT_%14" -> "op_%25"  [operand=left];
	"INPUT_%14" -> "op_%29"  [operand=left];
	"INPUT_%14" -> "op_%30"  [operand=left];
	"INPUT_%14" -> "op_%33"  [operand=left];
	"INPUT_%14" -> "op_%38"  [operand=left];
	"INPUT_%14" -> "op_%39"  [operand=left];
	"INPUT_%14" -> "op_%56"  [operand=right];
	"INPUT_%16" -> "op_%27"  [operand=right];
	"INPUT_%16" -> "op_%34"  [operand=right];
	"INPUT_%16" -> "op_%43"  [operand=left];
	"INPUT_%16" -> "op_%44"  [operand=left];
	"INPUT_%16" -> "op_%48"  [operand=right];
	"INPUT_%16" -> "op_%52"  [operand=left];
	"INPUT_%16" -> "op_%53"  [operand=left];
	"op_%17" -> "op_%19"  [operand=left];
	"op_%17" -> "op_%20"  [operand=right];
	"1" -> "op_%17"  [operand=right];
	"1" -> "op_%21"  [operand=right];
	"1" -> "op_%29"  [operand=right];
	"1" -> "op_%38"  [operand=right];
	"1" -> "op_%43"  [operand=right];
	"1" -> "op_%52"  [operand=right];
	"op_%18" -> "merge_%20"  [operand=left];
	"0" -> "op_%18"  [operand=right];
	"0" -> "op_%22"  [operand=right];
	"0" -> "op_%30"  [operand=right];
	"0" -> "op_%39"  [operand=right];
	"0" -> "op_%44"  [operand=right];
	"0" -> "op_%53"  [operand=right];
	"op_%19" -> "merge_%20"  [operand=right];
	"27" -> "op_%19"  [operand=right];
	"27" -> "op_%23"  [operand=right];
	"27" -> "op_%31"  [operand=right];
	"27" -> "op_%40"  [operand=right];
	"27" -> "op_%45"  [operand=right];
	"27" -> "op_%54"  [operand=right];
	"op_%20" -> "op_%26"  [operand=right];
	"op_%20" -> "op_%57"  [operand=right];
	"merge_%20" -> "op_%20"  [operand=left];
	"op_%21" -> "op_%23"  [operand=left];
	"op_%21" -> "op_%24"  [operand=right];
	"op_%22" -> "merge_%24"  [operand=left];
	"op_%23" -> "merge_%24"  [operand=right];
	"op_%24" -> "op_%28"  [operand=right];
	"op_%24" -> "op_%35"  [operand=right];
	"merge_%24" -> "op_%24"  [operand=left];
	"op_%25" -> "op_%26"  [operand=left];
	"op_%26" -> "op_%27"  [operand=left];
	"op_%27" -> "op_%28"  [operand=left];
	"op_%28" -> "OUTPUT_0";
	"op_%29" -> "op_%31"  [operand=left];
	"op_%29" -> "op_%32"  [operand=right];
	"op_%30" -> "merge_%32"  [operand=left];
	"op_%31" -> "merge_%32"  [operand=right];
	"op_%32" -> "op_%36"  [operand=right];
	"merge_%32" -> "op_%32"  [operand=left];
	"op_%33" -> "op_%34"  [operand=left];
	"op_%34" -> "op_%35"  [operand=left];
	"op_%35" -> "op_%36"  [operand=left];
	"op_%36" -> "OUTPUT_1";
	"op_%38" -> "op_%40"  [operand=left];
	"op_%38" -> "op_%41"  [operand=right];
	"op_%39" -> "merge_%41"  [operand=left];
	"op_%40" -> "merge_%41"  [operand=right];
	"op_%41" -> "op_%49"  [operand=right];
	"merge_%41" -> "op_%41"  [operand=left];
	"op_%43" -> "op_%45"  [operand=left];
	"op_%43" -> "op_%46"  [operand=right];
	"op_%44" -> "merge_%46"  [operand=left];
	"op_%45" -> "merge_%46"  [operand=right];
	"op_%46" -> "op_%50"  [operand=right];
	"merge_%46" -> "op_%46"  [operand=left];
	"op_%47" -> "op_%48"  [operand=left];
	"op_%47" -> "op_%56"  [operand=left];
	"op_%48" -> "op_%49"  [operand=left];
	"op_%49" -> "op_%50"  [operand=left];
	"op_%50" -> "OUTPUT_2";
	"op_%52" -> "op_%54"  [operand=left];
	"op_%52" -> "op_%55"  [operand=right];
	"op_%53" -> "merge_%55"  [operand=left];
	"op_%54" -> "merge_%55"  [operand=right];
	"op_%55" -> "op_%58"  [operand=right];
	"merge_%55" -> "op_%55"  [operand=left];
	"op_%56" -> "op_%57"  [operand=left];
	"op_%57" -> "op_%58"  [operand=left];
	"op_%58" -> "OUTPUT_3";
}
